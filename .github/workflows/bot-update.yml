name: Actions Updates

permissions:
  contents: write
  pull-requests: write

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  FILE_TO_UPDATE: 'timestamp'
  BRANCH_NAME: 'update-branch'
  BASE: 'main'

jobs:
  check_and_update:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run Python Script
      run: python task.py --output $FILE_TO_UPDATE

    - name: debug
      run: pwd && ls && git status
    - name: Check for changes
      id: git_diff
      run: |
        if [ ! -f ${FILE_TO_UPDATE} ]; then
          echo "changes_detected=true" >> $GITHUB_ENV
        elif [ "$(git diff --quiet HEAD ${FILE_TO_UPDATE})" -ne 0 ]; then
          echo "changes_detected=true" >> $GITHUB_ENV
        else
          echo "changes_detected=false" >> $GITHUB_ENV
        fi

    - name: Get current branch commit SHA
      id: get_sha
      run: |
        echo "Getting the latest commit SHA..."
        SHA=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/git/refs/heads/main | jq -r .object.sha)
        echo "sha=$SHA" >> $GITHUB_ENV

    - name: Create new branch
      if: env.changes_detected == 'true'
      id: create_branch
      run: |
        echo "Creating a new branch $BRANCH_NAME..."
        curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -d "{\"ref\":\"refs/heads/$BRANCH_NAME\", \"sha\":\"${{ env.sha }}\"}" \
          https://api.github.com/repos/${{ github.repository }}/git/refs
        echo "branch=$BRANCH_NAME" >> $GITHUB_ENV

    - name: Commit changes
      if: env.changes_detected == 'true'
      run: |
        echo "Committing changes..."
        FILES_CHANGED=$(git status --porcelain | awk '{print $2}')
        for file in $FILES_CHANGED; do
          CONTENT=$(base64 -w 0 $file)
          FILENAME=$(basename $file)
          SHA=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/contents/$file?ref=$BRANCH_NAME | jq -r .sha)
          if [ "$SHA" == "null" ]; then
            SHA=""
          fi
          curl -s -X PUT -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d "{\"message\":\"Update $FILENAME\", \"content\":\"$CONTENT\", \"branch\":\"$BRANCH_NAME\", \"sha\":\"$SHA\"}" \
            https://api.github.com/repos/${{ github.repository }}/contents/$file
        done

    - name: Create Pull Request
      if: env.changes_detected == 'true'
      run: |
        echo "Creating a pull request..."
        curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -d "{\"title\":\"Update generated content\", \"head\":\"$BRANCH_NAME\", \"base\":\"main\", \"body\":\"Automated PR to update generated content\"}" \
          https://api.github.com/repos/${{ github.repository }}/pulls